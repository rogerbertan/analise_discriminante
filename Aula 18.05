{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "948fe8d5",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.datasets import load_wine\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "np.set_printoptions(precision=4)\n",
    "from matplotlib import pyplot as plt\n",
    "import seaborn as sns\n",
    "sns.set()\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import confusion_matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "2688289c",
   "metadata": {},
   "outputs": [],
   "source": [
    "wine = load_wine()\n",
    "\n",
    "X = pd.DataFrame(wine.data, columns=wine.feature_names)\n",
    "Y = pd.Categorical.from_codes(wine.target, wine.target_names)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "f827feab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>alcohol</th>\n",
       "      <th>malic_acid</th>\n",
       "      <th>ash</th>\n",
       "      <th>alcalinity_of_ash</th>\n",
       "      <th>magnesium</th>\n",
       "      <th>total_phenols</th>\n",
       "      <th>flavanoids</th>\n",
       "      <th>nonflavanoid_phenols</th>\n",
       "      <th>proanthocyanins</th>\n",
       "      <th>color_intensity</th>\n",
       "      <th>hue</th>\n",
       "      <th>od280/od315_of_diluted_wines</th>\n",
       "      <th>proline</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>14.23</td>\n",
       "      <td>1.71</td>\n",
       "      <td>2.43</td>\n",
       "      <td>15.6</td>\n",
       "      <td>127.0</td>\n",
       "      <td>2.80</td>\n",
       "      <td>3.06</td>\n",
       "      <td>0.28</td>\n",
       "      <td>2.29</td>\n",
       "      <td>5.64</td>\n",
       "      <td>1.04</td>\n",
       "      <td>3.92</td>\n",
       "      <td>1065.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>13.20</td>\n",
       "      <td>1.78</td>\n",
       "      <td>2.14</td>\n",
       "      <td>11.2</td>\n",
       "      <td>100.0</td>\n",
       "      <td>2.65</td>\n",
       "      <td>2.76</td>\n",
       "      <td>0.26</td>\n",
       "      <td>1.28</td>\n",
       "      <td>4.38</td>\n",
       "      <td>1.05</td>\n",
       "      <td>3.40</td>\n",
       "      <td>1050.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>13.16</td>\n",
       "      <td>2.36</td>\n",
       "      <td>2.67</td>\n",
       "      <td>18.6</td>\n",
       "      <td>101.0</td>\n",
       "      <td>2.80</td>\n",
       "      <td>3.24</td>\n",
       "      <td>0.30</td>\n",
       "      <td>2.81</td>\n",
       "      <td>5.68</td>\n",
       "      <td>1.03</td>\n",
       "      <td>3.17</td>\n",
       "      <td>1185.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>14.37</td>\n",
       "      <td>1.95</td>\n",
       "      <td>2.50</td>\n",
       "      <td>16.8</td>\n",
       "      <td>113.0</td>\n",
       "      <td>3.85</td>\n",
       "      <td>3.49</td>\n",
       "      <td>0.24</td>\n",
       "      <td>2.18</td>\n",
       "      <td>7.80</td>\n",
       "      <td>0.86</td>\n",
       "      <td>3.45</td>\n",
       "      <td>1480.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>13.24</td>\n",
       "      <td>2.59</td>\n",
       "      <td>2.87</td>\n",
       "      <td>21.0</td>\n",
       "      <td>118.0</td>\n",
       "      <td>2.80</td>\n",
       "      <td>2.69</td>\n",
       "      <td>0.39</td>\n",
       "      <td>1.82</td>\n",
       "      <td>4.32</td>\n",
       "      <td>1.04</td>\n",
       "      <td>2.93</td>\n",
       "      <td>735.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   alcohol  malic_acid   ash  alcalinity_of_ash  magnesium  total_phenols  \\\n",
       "0    14.23        1.71  2.43               15.6      127.0           2.80   \n",
       "1    13.20        1.78  2.14               11.2      100.0           2.65   \n",
       "2    13.16        2.36  2.67               18.6      101.0           2.80   \n",
       "3    14.37        1.95  2.50               16.8      113.0           3.85   \n",
       "4    13.24        2.59  2.87               21.0      118.0           2.80   \n",
       "\n",
       "   flavanoids  nonflavanoid_phenols  proanthocyanins  color_intensity   hue  \\\n",
       "0        3.06                  0.28             2.29             5.64  1.04   \n",
       "1        2.76                  0.26             1.28             4.38  1.05   \n",
       "2        3.24                  0.30             2.81             5.68  1.03   \n",
       "3        3.49                  0.24             2.18             7.80  0.86   \n",
       "4        2.69                  0.39             1.82             4.32  1.04   \n",
       "\n",
       "   od280/od315_of_diluted_wines  proline  \n",
       "0                          3.92   1065.0  \n",
       "1                          3.40   1050.0  \n",
       "2                          3.17   1185.0  \n",
       "3                          3.45   1480.0  \n",
       "4                          2.93    735.0  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "775b9f45",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['class_0', 'class_0', 'class_0', 'class_0', 'class_0', ..., 'class_2', 'class_2', 'class_2', 'class_2', 'class_2']\n",
       "Length: 178\n",
       "Categories (3, object): ['class_0', 'class_1', 'class_2']"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "5b95fc0d",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = X.join(pd.Series(Y, name='class'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "f306be3b",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\ROGER~1.177\\AppData\\Local\\Temp/ipykernel_14072/2643576262.py:4: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.\n",
      "  class_feature_means[c] = rows.mean()\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>class_0</th>\n",
       "      <th>class_1</th>\n",
       "      <th>class_2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>alcohol</th>\n",
       "      <td>13.744746</td>\n",
       "      <td>12.278732</td>\n",
       "      <td>13.153750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>malic_acid</th>\n",
       "      <td>2.010678</td>\n",
       "      <td>1.932676</td>\n",
       "      <td>3.333750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ash</th>\n",
       "      <td>2.455593</td>\n",
       "      <td>2.244789</td>\n",
       "      <td>2.437083</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>alcalinity_of_ash</th>\n",
       "      <td>17.037288</td>\n",
       "      <td>20.238028</td>\n",
       "      <td>21.416667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>magnesium</th>\n",
       "      <td>106.338983</td>\n",
       "      <td>94.549296</td>\n",
       "      <td>99.312500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total_phenols</th>\n",
       "      <td>2.840169</td>\n",
       "      <td>2.258873</td>\n",
       "      <td>1.678750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>flavanoids</th>\n",
       "      <td>2.982373</td>\n",
       "      <td>2.080845</td>\n",
       "      <td>0.781458</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>nonflavanoid_phenols</th>\n",
       "      <td>0.290000</td>\n",
       "      <td>0.363662</td>\n",
       "      <td>0.447500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>proanthocyanins</th>\n",
       "      <td>1.899322</td>\n",
       "      <td>1.630282</td>\n",
       "      <td>1.153542</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>color_intensity</th>\n",
       "      <td>5.528305</td>\n",
       "      <td>3.086620</td>\n",
       "      <td>7.396250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hue</th>\n",
       "      <td>1.062034</td>\n",
       "      <td>1.056282</td>\n",
       "      <td>0.682708</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>od280/od315_of_diluted_wines</th>\n",
       "      <td>3.157797</td>\n",
       "      <td>2.785352</td>\n",
       "      <td>1.683542</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>proline</th>\n",
       "      <td>1115.711864</td>\n",
       "      <td>519.507042</td>\n",
       "      <td>629.895833</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  class_0     class_1     class_2\n",
       "alcohol                         13.744746   12.278732   13.153750\n",
       "malic_acid                       2.010678    1.932676    3.333750\n",
       "ash                              2.455593    2.244789    2.437083\n",
       "alcalinity_of_ash               17.037288   20.238028   21.416667\n",
       "magnesium                      106.338983   94.549296   99.312500\n",
       "total_phenols                    2.840169    2.258873    1.678750\n",
       "flavanoids                       2.982373    2.080845    0.781458\n",
       "nonflavanoid_phenols             0.290000    0.363662    0.447500\n",
       "proanthocyanins                  1.899322    1.630282    1.153542\n",
       "color_intensity                  5.528305    3.086620    7.396250\n",
       "hue                              1.062034    1.056282    0.682708\n",
       "od280/od315_of_diluted_wines     3.157797    2.785352    1.683542\n",
       "proline                       1115.711864  519.507042  629.895833"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "class_feature_means = pd.DataFrame(columns=wine.target_names)\n",
    "\n",
    "for c, rows in df.groupby('class'):\n",
    "    class_feature_means[c] = rows.mean()\n",
    "\n",
    "class_feature_means"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "e34663a5",
   "metadata": {},
   "outputs": [],
   "source": [
    "within_class_scatter_matrix = np.zeros((13,13))\n",
    "\n",
    "for c, rows in df.groupby('class'):\n",
    "    rows = rows.drop(['class'], axis = 1)\n",
    "    s = np.zeros((13, 13))\n",
    "\n",
    "    for index, row in rows.iterrows():\n",
    "        x = row.values.reshape(13,1)\n",
    "        mc = class_feature_means[c].values.reshape(13,1)\n",
    "        s += (x - mc).dot((x-mc).T)\n",
    "        within_class_scatter_matrix += s"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "1d7f8de2",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\ROGER~1.177\\AppData\\Local\\Temp/ipykernel_14072/3243633057.py:1: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.\n",
      "  feature_means = df.mean()\n"
     ]
    }
   ],
   "source": [
    "feature_means = df.mean()\n",
    "\n",
    "between_class_scatter_matrix = np.zeros((13,13))\n",
    "for c in class_feature_means:\n",
    "    n = len(df.loc[df['class'] == c].index)\n",
    "    mc = class_feature_means[c].values.reshape(13,1)\n",
    "    m = feature_means.values.reshape(13,1)\n",
    "    between_class_scatter_matrix += n * (mc - m).dot ((mc - m).T)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "583415f7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.28157790627842655\n",
      "0.1379256197421648\n",
      "3.9203471598369984e-17\n",
      "3.291470449092264e-17\n",
      "2.7755575615628914e-17\n",
      "1.9242031551184764e-17\n",
      "1.7643422233158494e-17\n",
      "1.7643422233158494e-17\n",
      "1.010704202508462e-17\n",
      "1.010704202508462e-17\n",
      "7.231931192218948e-18\n",
      "3.476284961228655e-18\n",
      "3.476284961228655e-18\n"
     ]
    }
   ],
   "source": [
    "eigen_values, eigen_vectors = np.linalg.eig(np.linalg.inv(\n",
    "    within_class_scatter_matrix).dot(between_class_scatter_matrix))\n",
    "pairs = [(np.abs(eigen_values[i]), eigen_vectors[:, i]) for i in range(len(eigen_values))]\n",
    "\n",
    "pairs = sorted(pairs, key=lambda x: x[0], reverse=True)\n",
    "\n",
    "for pair in pairs:\n",
    "    print(pair[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "e650831a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 3.0179e+00,  4.2676e+00],\n",
       "       [ 3.0147e+00,  4.0731e+00],\n",
       "       [ 2.6426e+00,  4.1372e+00],\n",
       "       [ 2.8173e+00,  4.7211e+00],\n",
       "       [ 2.2189e+00,  3.8762e+00],\n",
       "       [ 2.9831e+00,  4.5070e+00],\n",
       "       [ 2.9093e+00,  4.5837e+00],\n",
       "       [ 2.9189e+00,  4.5237e+00],\n",
       "       [ 2.7258e+00,  4.2134e+00],\n",
       "       [ 2.6491e+00,  4.1813e+00],\n",
       "       [ 2.9669e+00,  4.3007e+00],\n",
       "       [ 2.6426e+00,  4.2618e+00],\n",
       "       [ 2.7176e+00,  4.3082e+00],\n",
       "       [ 3.2076e+00,  4.2734e+00],\n",
       "       [ 3.1423e+00,  4.6774e+00],\n",
       "       [ 2.6635e+00,  4.4931e+00],\n",
       "       [ 2.6386e+00,  4.3921e+00],\n",
       "       [ 2.6412e+00,  4.0411e+00],\n",
       "       [ 3.2082e+00,  4.6397e+00],\n",
       "       [ 2.6422e+00,  4.3483e+00],\n",
       "       [ 2.7284e+00,  3.9175e+00],\n",
       "       [ 2.2007e+00,  4.1080e+00],\n",
       "       [ 3.0839e+00,  4.0101e+00],\n",
       "       [ 2.6334e+00,  3.9290e+00],\n",
       "       [ 2.6552e+00,  3.8578e+00],\n",
       "       [ 2.4220e+00,  3.7757e+00],\n",
       "       [ 2.8998e+00,  4.2806e+00],\n",
       "       [ 2.4795e+00,  3.9852e+00],\n",
       "       [ 2.7405e+00,  4.0364e+00],\n",
       "       [ 2.5238e+00,  4.0949e+00],\n",
       "       [ 2.4985e+00,  4.0283e+00],\n",
       "       [ 2.7004e+00,  4.2847e+00],\n",
       "       [ 2.6947e+00,  3.7704e+00],\n",
       "       [ 2.8234e+00,  4.1036e+00],\n",
       "       [ 2.5621e+00,  4.1007e+00],\n",
       "       [ 2.5096e+00,  3.8042e+00],\n",
       "       [ 2.6117e+00,  4.1700e+00],\n",
       "       [ 2.3843e+00,  3.9750e+00],\n",
       "       [ 2.6461e+00,  3.6555e+00],\n",
       "       [ 2.6236e+00,  4.5372e+00],\n",
       "       [ 2.5744e+00,  3.8070e+00],\n",
       "       [ 2.3556e+00,  3.9948e+00],\n",
       "       [ 3.0500e+00,  4.4328e+00],\n",
       "       [ 2.1183e+00,  3.9035e+00],\n",
       "       [ 2.4828e+00,  3.6280e+00],\n",
       "       [ 2.4475e+00,  4.4998e+00],\n",
       "       [ 2.7164e+00,  4.3209e+00],\n",
       "       [ 2.6575e+00,  3.9739e+00],\n",
       "       [ 2.3110e+00,  4.0808e+00],\n",
       "       [ 2.7258e+00,  4.2531e+00],\n",
       "       [ 2.5602e+00,  4.0198e+00],\n",
       "       [ 2.8784e+00,  4.3401e+00],\n",
       "       [ 2.9814e+00,  4.3111e+00],\n",
       "       [ 2.7394e+00,  4.4740e+00],\n",
       "       [ 2.6370e+00,  4.1262e+00],\n",
       "       [ 2.1527e+00,  4.0509e+00],\n",
       "       [ 2.4955e+00,  4.1634e+00],\n",
       "       [ 2.7982e+00,  4.3248e+00],\n",
       "       [ 2.7688e+00,  4.3301e+00],\n",
       "       [ 1.3747e+00,  3.0405e+00],\n",
       "       [ 1.7330e+00,  3.2807e+00],\n",
       "       [ 1.2641e+00,  3.2685e+00],\n",
       "       [ 1.9086e+00,  3.3810e+00],\n",
       "       [ 1.8976e+00,  2.9654e+00],\n",
       "       [ 1.8088e+00,  3.0601e+00],\n",
       "       [ 2.0798e+00,  3.3904e+00],\n",
       "       [ 2.2585e+00,  3.0675e+00],\n",
       "       [ 1.9088e+00,  3.0928e+00],\n",
       "       [ 1.8219e+00,  3.5984e+00],\n",
       "       [ 1.7885e+00,  3.0352e+00],\n",
       "       [ 1.4829e+00,  3.4063e+00],\n",
       "       [ 1.9466e+00,  3.3220e+00],\n",
       "       [ 1.5674e+00,  3.3290e+00],\n",
       "       [ 2.2050e+00,  3.2244e+00],\n",
       "       [ 1.8167e+00,  3.3239e+00],\n",
       "       [ 1.5833e+00,  2.9763e+00],\n",
       "       [ 1.7125e+00,  3.0520e+00],\n",
       "       [ 1.6756e+00,  3.2809e+00],\n",
       "       [ 1.9813e+00,  3.1352e+00],\n",
       "       [ 1.9336e+00,  3.1663e+00],\n",
       "       [ 1.9868e+00,  2.5887e+00],\n",
       "       [ 2.2646e+00,  3.3968e+00],\n",
       "       [ 1.7203e+00,  2.9890e+00],\n",
       "       [ 1.2306e+00,  3.4996e+00],\n",
       "       [ 1.9528e+00,  3.3324e+00],\n",
       "       [ 2.0865e+00,  3.1373e+00],\n",
       "       [ 1.6032e+00,  2.8358e+00],\n",
       "       [ 1.7332e+00,  2.9394e+00],\n",
       "       [ 1.8291e+00,  3.1749e+00],\n",
       "       [ 1.8136e+00,  2.9281e+00],\n",
       "       [ 1.7093e+00,  3.0726e+00],\n",
       "       [ 1.4433e+00,  3.0666e+00],\n",
       "       [ 1.5684e+00,  3.0762e+00],\n",
       "       [ 1.9130e+00,  3.1081e+00],\n",
       "       [ 1.6900e+00,  3.0764e+00],\n",
       "       [ 2.1874e+00,  3.1569e+00],\n",
       "       [ 1.2484e+00,  3.5979e+00],\n",
       "       [ 2.0779e+00,  2.9225e+00],\n",
       "       [ 2.3878e+00,  3.0227e+00],\n",
       "       [ 2.2044e+00,  2.8504e+00],\n",
       "       [ 2.1115e+00,  2.9888e+00],\n",
       "       [ 1.7671e+00,  3.1078e+00],\n",
       "       [ 1.8957e+00,  3.3378e+00],\n",
       "       [ 1.4308e+00,  2.7043e+00],\n",
       "       [ 2.0763e+00,  3.1329e+00],\n",
       "       [ 1.9675e+00,  2.9415e+00],\n",
       "       [ 2.0418e+00,  3.1247e+00],\n",
       "       [ 1.6468e+00,  3.1149e+00],\n",
       "       [ 1.7262e+00,  2.7278e+00],\n",
       "       [ 2.3739e+00,  3.2143e+00],\n",
       "       [ 1.4341e+00,  2.8307e+00],\n",
       "       [ 1.7192e+00,  3.0309e+00],\n",
       "       [ 2.1426e+00,  3.5066e+00],\n",
       "       [ 1.6127e+00,  2.8200e+00],\n",
       "       [ 1.9542e+00,  3.0012e+00],\n",
       "       [ 1.9632e+00,  2.2522e+00],\n",
       "       [ 1.7794e+00,  2.8329e+00],\n",
       "       [ 1.8589e+00,  2.7924e+00],\n",
       "       [ 1.3396e+00,  3.5166e+00],\n",
       "       [ 1.8132e+00,  3.0980e+00],\n",
       "       [ 2.1956e+00,  3.2039e+00],\n",
       "       [ 2.9833e+00,  3.0353e+00],\n",
       "       [ 1.6338e+00,  3.2942e+00],\n",
       "       [ 1.6946e+00,  3.4924e+00],\n",
       "       [ 1.8934e+00,  3.2584e+00],\n",
       "       [ 2.0732e+00,  2.9096e+00],\n",
       "       [ 2.0090e+00,  2.9550e+00],\n",
       "       [ 1.5607e+00,  2.8229e+00],\n",
       "       [ 1.7799e+00,  2.7139e+00],\n",
       "       [ 1.5001e+00,  3.4386e+00],\n",
       "       [ 1.2184e+00,  3.6947e+00],\n",
       "       [ 9.1179e-01,  3.9021e+00],\n",
       "       [ 6.8237e-01,  3.6913e+00],\n",
       "       [ 7.0812e-01,  3.8652e+00],\n",
       "       [ 8.4614e-01,  3.5400e+00],\n",
       "       [ 8.2998e-01,  3.7709e+00],\n",
       "       [ 7.4360e-01,  3.9417e+00],\n",
       "       [ 4.5377e-01,  3.8197e+00],\n",
       "       [ 7.7371e-01,  3.9128e+00],\n",
       "       [ 7.3346e-01,  3.7292e+00],\n",
       "       [ 1.0792e+00,  3.9915e+00],\n",
       "       [ 1.1042e+00,  4.1857e+00],\n",
       "       [ 9.0039e-01,  3.9708e+00],\n",
       "       [ 9.0600e-01,  4.0635e+00],\n",
       "       [ 7.5946e-01,  4.2599e+00],\n",
       "       [ 8.7725e-01,  3.8807e+00],\n",
       "       [ 4.0710e-01,  4.2004e+00],\n",
       "       [ 4.2974e-01,  4.2965e+00],\n",
       "       [ 3.3753e-01,  4.1828e+00],\n",
       "       [ 4.7566e-01,  4.1785e+00],\n",
       "       [ 5.1331e-01,  4.1828e+00],\n",
       "       [ 2.4181e-01,  4.1786e+00],\n",
       "       [ 2.4916e-01,  3.7977e+00],\n",
       "       [ 3.4799e-01,  4.2463e+00],\n",
       "       [ 5.6102e-01,  3.5719e+00],\n",
       "       [ 3.0775e-01,  4.2026e+00],\n",
       "       [ 2.8269e-01,  4.3699e+00],\n",
       "       [ 4.4695e-01,  3.8761e+00],\n",
       "       [-2.3620e-05,  4.3808e+00],\n",
       "       [ 6.3713e-02,  4.2198e+00],\n",
       "       [ 3.1427e-01,  3.8885e+00],\n",
       "       [ 8.9771e-01,  4.1966e+00],\n",
       "       [ 9.0060e-01,  3.8351e+00],\n",
       "       [ 9.6217e-01,  4.0758e+00],\n",
       "       [ 3.4367e-01,  4.2357e+00],\n",
       "       [ 4.4342e-01,  4.0225e+00],\n",
       "       [ 2.6444e-01,  4.4239e+00],\n",
       "       [ 3.4986e-01,  4.3215e+00],\n",
       "       [ 4.9947e-01,  4.2852e+00],\n",
       "       [ 2.9626e-01,  4.5827e+00],\n",
       "       [ 7.2714e-01,  3.7964e+00],\n",
       "       [ 2.4617e-01,  4.0509e+00],\n",
       "       [ 4.3944e-01,  4.5155e+00],\n",
       "       [ 5.2638e-01,  4.6145e+00],\n",
       "       [ 4.4728e-01,  4.2166e+00],\n",
       "       [ 3.5496e-01,  4.5123e+00],\n",
       "       [ 6.0166e-01,  4.2431e+00],\n",
       "       [ 1.4326e-01,  4.4609e+00]])"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "w_matrix = np.hstack((pairs[0][1].reshape(13,1)\n",
    "                      , pairs[1][1].reshape(13,1))).real\n",
    "X_lda = np.array(X.dot(w_matrix))\n",
    "X_lda"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "5f472cc0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x192e6033190>"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "le = LabelEncoder()\n",
    "y = le.fit_transform(df['class'])\n",
    "plt.xlabel('LD1')\n",
    "plt.ylabel('LD2')\n",
    "plt.scatter(X_lda[:,0], X_lda[:,1], c=y, cmap='rainbow', alpha=0.7, edgecolors='b')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "79d5ac52",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.discriminant_analysis import LinearDiscriminantAnalysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "5b8cffbb",
   "metadata": {},
   "outputs": [],
   "source": [
    "wine = load_wine()\n",
    "\n",
    "X = pd.DataFrame(wine.data, columns = wine.feature_names)\n",
    "Y = pd.Categorical.from_codes(wine.target, wine.target_names)\n",
    "\n",
    "df = X.join(pd.Series(Y, name='class'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "2a7df3e3",
   "metadata": {},
   "outputs": [],
   "source": [
    "le = LabelEncoder()\n",
    "y = le.fit_transform(df['class'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "be31e3bd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x192e60ece20>"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "lda = LinearDiscriminantAnalysis()\n",
    "X_lda = lda.fit_transform(X, y)\n",
    "plt.xlabel('LD1')\n",
    "plt.ylabel('LD2')\n",
    "plt.scatter(X_lda[:,0], X_lda[:,1], c=y, cmap='rainbow', alpha=0.7, edgecolors='b')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
